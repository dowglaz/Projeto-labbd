/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AtualizaPiloto.java
 *
 * Created on 05/12/2009, 02:31:53
 */

package view_projetofinallabbd;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import oracle.jdbc.OracleTypes;

/**
 *
 * @author Henry
 */
public class AtualizaPiloto extends javax.swing.JFrame {
    Connection conn;
    /** Creates new form AtualizaPiloto
     * @param conn
     */
    public AtualizaPiloto(Connection conn) {
        initComponents();
        setLocationRelativeTo(null);
        this.conn = conn;
        this.listPilotos();
    }

    private AtualizaPiloto() {
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "CPF", "Nome", "Rua", "Nº", "Cidade", "Estado", "CEP", "Nº Licença", "Horas de vôo"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton3.setText("Fechar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setText("Editar Cadastro");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Selecione um empregado e clique em Editar Cadastro:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1137, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
}//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.foo();
}//GEN-LAST:event_jButton1ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AtualizaPiloto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables


    private EditarCadastroPiloto editcadapiloto;
     public void foo() {
        int index = this.getSelectedPiloto();
        if( index == -1){
            JOptionPane.showMessageDialog(null,"Por favor selecione uma linha da tabela.");
        }else{
               new EditarCadastroPiloto(this.conn, this.jTable1 , index , this ).setVisible(true);
               this.setVisible(false);
        }
    }

    public int getSelectedPiloto() {
              int index = jTable1.getSelectedRow();
              return index;
    }

    void listPilotos() {
            CallableStatement cstmt = null;
            ResultSet rs = null;
            java.sql.Statement stmt = null;

            jTable1.removeAll();

            try{
                  cstmt = this.conn.prepareCall("begin ?:= PackPessoa.getPessoas(?); end;");

                  //passa parametro de entrada para a funcao
                  cstmt.setString(2, "PILOTO");

                  //passa o tipo do parâmetro de saída
                  cstmt.registerOutParameter(1, OracleTypes.CURSOR);
                  cstmt.execute();
                  stmt =  this.conn.createStatement();
                  rs = (ResultSet) cstmt.getObject(1);
                  ResultSetMetaData rsm = rs.getMetaData();
                  int columnCount = rsm.getColumnCount();
                  jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] { },
                    new String [] {
                     //aqui adiciona-se as colunas e seus respectivos nomes
                      "CPF", "Nome", "Rua", "Nº", "Cidade", "Estado", "CEP", "Nº Licença", "Horas de vôo"
                   }));

                    DefaultTableModel model =
                            (DefaultTableModel)jTable1.getModel();
                   if(!rs.next()){
                       JOptionPane.showMessageDialog(null, "Não há cadastros de Pilotos para editar.");
                   }else{
                        // pessoa.cpf, nome, rua, nro, cidade, estado, cep, salario, turno
                        model.addRow( new Object[]{rs.getObject(1), rs.getObject(2), rs.getObject(3),
                                        rs.getObject(4), rs.getObject(5), rs.getObject(6), rs.getObject(7),
                                        rs.getObject(8), rs.getObject(9)} );
                        while (rs.next()){
                                model.addRow( new Object[]{rs.getObject(1), rs.getObject(2), rs.getObject(3),
                                        rs.getObject(4), rs.getObject(5), rs.getObject(6), rs.getObject(7),
                                        rs.getObject(8), rs.getObject(9)} );
                        }
                   }
            } catch (SQLException ex) {
                  Logger.getLogger(ConsultaAeroportosParaAterrissar.class.getName()).log(Level.SEVERE, null, ex);
                  ex.printStackTrace();
                  int error = ex.getErrorCode();
                  System.out.println(error);
                  JOptionPane.showMessageDialog(null,"Erro no banco de dados. Entre em contato com o DBA.");

            }catch(NumberFormatException e){
                 JOptionPane.showMessageDialog(null,"Erro! Verifique se não há dados errados nos campos numéricos.");

            }finally {
                  if (rs != null){
                             try {
                             rs.close();
                             }catch (SQLException ex) {Logger.getLogger(ConsultaAeroportosParaAterrissar.class.getName()).log(Level.SEVERE, null, ex);}
                  }
                  if ( cstmt != null){
                         try {
                         cstmt.close();
                         }catch (SQLException ex) {Logger.getLogger(ConsultaAeroportosParaAterrissar.class.getName()).log(Level.SEVERE, null, ex);}
                  }
                  if ( stmt != null){
                                    try {
                                    stmt.close();   //fecha a chamada...
                                    } catch (SQLException ex) { Logger.getLogger(EmpregadoFrame.class.getName()).log(Level.SEVERE, null, ex);}
                              }
              }
    }
}
