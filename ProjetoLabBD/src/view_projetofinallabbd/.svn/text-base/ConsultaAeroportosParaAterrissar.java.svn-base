/*
 * ConsultaAeroportosParaAterrissar.java
 *
 * 
 * Created on 03/12/2009, 20:59:51
 */

package view_projetofinallabbd;

import java.sql.CallableStatement;
import java.sql.ResultSetMetaData;
import oracle.jdbc.OracleTypes;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


public class ConsultaAeroportosParaAterrissar extends javax.swing.JFrame {
    private Connection conn;
    /** Creates new form ConsultaAeroportosParaAterrissar
     * @param conn
     */
    public ConsultaAeroportosParaAterrissar(Connection conn) {
        this.conn = conn;
        initComponents();
        this.setLocationRelativeTo(null);
        this.selecionaAvioes();
    }

    private ConsultaAeroportosParaAterrissar() {

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel1.setText("Consulta de aeroportos em que um avião pode aterrissar.");

        jLabel2.setText("Seleciona o número de identificação do avião:");

        jButton3.setText("Fechar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setText("Consultar Aeroportos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null}
            },
            new String [] {
                "Código", "Nome", "Cidade", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setText("O avião é do tipo");

        jTextField1.setEditable(false);

        jLabel4.setText("e pode aterrissar nos seguintes aeroportos:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 662, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField1))
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE))
                            .addComponent(jLabel4))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jButton1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            this.consultaAeroportos();
}//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
            this.consultaAeroportos();

}//GEN-LAST:event_jButton1KeyPressed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ConsultaAeroportosParaAterrissar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables


 private Object makeObj(final String item)  {
     return new Object() {@Override
         public String toString() { return item; } };
   }

    private void consultaAeroportos(){
            CallableStatement cstmt = null;
            ResultSet rs = null;
            java.sql.Statement stmt = null;

            try{
                  cstmt = conn.prepareCall("begin ?:= PackAeroportos.aeroportosParaAterrissar(?); end;");

                  //passa parametro de entrada para a funcao
                  int id_aviao = Integer.parseInt(jComboBox1.getSelectedItem().toString());
                  cstmt.setInt(2, id_aviao);

                  //passa o tipo do parâmetro de saída
                  cstmt.registerOutParameter(1, OracleTypes.CURSOR);

                  cstmt.execute();
                  
                  stmt =  this.conn.createStatement();

                  String sql =  "select tipo_aviao from aviao where id_aviao =" + id_aviao;

                  ResultSet set = stmt.executeQuery(sql);
                  set.next();
                  
                  String tipo = set.getString(1);
                  if( ! tipo.isEmpty()){
                        jTextField1.setText(tipo);
                  }
                    
                  rs = (ResultSet) cstmt.getObject(1);

                  ResultSetMetaData rsm = rs.getMetaData();

                  int columnCount = rsm.getColumnCount();

                  jTable1.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] { },
                    new String [] {
                     //aqui adiciona-se as colunas e seus respectivos nomes
                     "Código", "Nome", "Cidade", "Estado"
                   }));

                    DefaultTableModel model =
                            (DefaultTableModel)jTable1.getModel();
                   if(!rs.next()){
                       JOptionPane.showMessageDialog(null, "Não há aeroportos para aterrissagem.");
                   }else{
                        model.addRow( new Object[]{rs.getObject(1), rs.getObject(2), rs.getObject(3), rs.getObject(4)});
                        while (rs.next()){
                            model.addRow( new Object[]{rs.getObject(1), rs.getObject(2), rs.getObject(3), rs.getObject(4)});
                        }
                   }
            } catch (SQLException ex) {
                  Logger.getLogger(ConsultaAeroportosParaAterrissar.class.getName()).log(Level.SEVERE, null, ex);
                  ex.printStackTrace();
                  int error = ex.getErrorCode();
                  System.out.println(error);
                  JOptionPane.showMessageDialog(null,"Erro no banco de dados. Entre em contato com o DBA.");

            }catch(NumberFormatException e){
                 JOptionPane.showMessageDialog(null,"Erro! Verifique se não há dados errados nos camos numéricos.");

            }finally {
                  if (rs != null){
                             try {
                             rs.close();
                             }catch (SQLException ex) {Logger.getLogger(ConsultaAeroportosParaAterrissar.class.getName()).log(Level.SEVERE, null, ex);}
                  }
                  if ( cstmt != null){
                         try {
                         cstmt.close();
                         }catch (SQLException ex) {Logger.getLogger(ConsultaAeroportosParaAterrissar.class.getName()).log(Level.SEVERE, null, ex);}
                  }
                  if ( stmt != null){
                                    try {
                                    stmt.close();   //fecha a chamada...
                                    } catch (SQLException ex) { Logger.getLogger(EmpregadoFrame.class.getName()).log(Level.SEVERE, null, ex);}
                              }
              }
    }

    private void selecionaAvioes(){
         CallableStatement cstmt = null;
         ResultSet rs = null;
             try{
              //P.S. eu defini esta função     makeObj()
              cstmt = conn.prepareCall("begin ?:= PackAvioes.selecionaAvioes; end;");

              //passa o tipo do parâmetro de saída
              cstmt.registerOutParameter(1, OracleTypes.CURSOR);

              cstmt.execute();

              rs = (ResultSet) cstmt.getObject(1);

              ResultSetMetaData rsm = rs.getMetaData(); //variavel usada mais a baixo também

              int columnCount = rsm.getColumnCount();  //variavel usada mais a baixo também

               while (rs.next()){
                   //System.out.println(rs.getObject(1).toString());
                   jComboBox1.addItem( makeObj( rs.getObject(1).toString() ) );
               }


          }catch (SQLException ex) {
                  Logger.getLogger(ConsultaAeroportosParaAterrissar.class.getName()).log(Level.SEVERE, null, ex);
                  ex.printStackTrace();
                    JOptionPane.showMessageDialog(null,"Erro no banco de dados. Entre em contato com o DBA.");

          }catch(NumberFormatException e){
                 JOptionPane.showMessageDialog(null,"Erro! Verifique se não há dados errados nos camos numéricos.");

          }finally {
                  if (rs != null){
                             try {
                             rs.close();
                             }catch (SQLException ex) {Logger.getLogger(ConsultaAeroportosParaAterrissar.class.getName()).log(Level.SEVERE, null, ex);}
                  }
                  if ( cstmt != null){
                         try {
                         cstmt.close();
                         }catch (SQLException ex) {Logger.getLogger(ConsultaAeroportosParaAterrissar.class.getName()).log(Level.SEVERE, null, ex);}
                  }
              }

    }

}
